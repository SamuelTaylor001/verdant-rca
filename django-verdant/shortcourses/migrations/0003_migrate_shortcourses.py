# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2020-02-12 12:55
from __future__ import unicode_literals

from django.db import migrations

STANDARDPAGE_COURSE_IDS = [13240, 13243, 17627, 17589]
TAXONOMY_DEGREE_LEVEL = 5
TAXONOMY_SCHOOL_ID = 59


def migrate_to_shortcourse(apps, schema_editor):
    ShortCoursePage = apps.get_model('shortcourses.ShortCoursePage')
    ContentType = apps.get_model('contenttypes.ContentType')
    DegreeLevel = apps.get_model('taxonomy.DegreeLevel')
    School = apps.get_model('taxonomy.School')

    degree_level = DegreeLevel.objects.get(pk=TAXONOMY_DEGREE_LEVEL)
    school_id = School.objects.get(pk=TAXONOMY_SCHOOL_ID)

    # Get content type for short course page model
    shortcourse_content_type, created = ContentType.objects.get_or_create(
        model='shortcoursepage', app_label='shortcourses')

    # Migrate section pages
    StandardPage = apps.get_model('rca.StandardPage')
    standardpage_coursepages = StandardPage.objects.filter(
        pk__in=STANDARDPAGE_COURSE_IDS
    )
    for standard_page in standardpage_coursepages:
        page = standard_page.page_ptr
        print(page.id)
        page.content_type = shortcourse_content_type
        print(page.content_type)
        page.save(update_fields=['content_type'])

        ShortCoursePage.objects.create(
            page_ptr_id=standard_page.page_ptr_id,
            # content_type_id=shortcourse_content_type.id,
            ## Short course fields
            programme_finder_exclude=False,
            degree_level=degree_level,
            related_school=school_id,
            ## Access Planit related fields
            ## uncomment if 1051 has merged.
            # details=' ',
            # ap_course_id='',
            # booking_enabled=True,
            # booking_disabled_text='',
            ## Shared fields
            body=standard_page.body,
            collapse_upcoming_events=standard_page.collapse_upcoming_events,
            feed_image=standard_page.feed_image,
            intro=standard_page.intro,
            middle_column_body=standard_page.middle_column_body,
            related_area=standard_page.related_area,
            related_programme=standard_page.related_programme,
            show_on_homepage=standard_page.show_on_homepage,
            show_on_school_page=standard_page.show_on_school_page,
            social_image=standard_page.social_image,
            social_text=standard_page.social_text,
            strapline=standard_page.strapline,
            # TODO: check if tags are present after relinked
            # tags=standard_page.tags,
            twitter_feed=standard_page.twitter_feed,
            # title=standard_page.title,
            # slug=standard_page.slug,
            # search_description=standard_page.search_description,
            # seo_title=standard_page.seo_title,
            # show_in_menus=standard_page.show_in_menus,
            # numchild=standard_page.numchild,
            # owner=standard_page.owner,
            # latest_revision_created_at=standard_page.latest_revision_created_at,
            # live=standard_page.live,
            # locked=standard_page.locked,
            # expire_at=standard_page.expire_at,
            # expired=standard_page.expired,
            # first_published_at=standard_page.first_published_at,
            # go_live_at=standard_page.go_live_at,
        )

        standard_page.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('shortcourses', '0002_unlink_shortcourse_pages'),
    ]

    run_before = [
        ('rca', '0109_relink_shortcourse_pages'),
    ]

    operations = [
        migrations.RunPython(migrate_to_shortcourse, migrations.RunPython.noop),
    ]
