# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2020-06-04 08:24
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('rca', '0107_allow_event_blank_body'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventItemTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='rca.EventItem')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rca_eventitemtag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsItemTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='rca.NewsItem')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rca_newsitemtag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='eventitem',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(help_text='A comma-separated list of tags.', through='rca.EventItemTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='newsitem',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(help_text='A comma-separated list of tags.', through='rca.NewsItemTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
